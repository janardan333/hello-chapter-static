!function(root,factory){"function"==typeof define&&define.amd?define([],factory):"object"==typeof module&&module.exports?module.exports=factory():root.anime=factory()}(this,()=>{const defaultInstanceSettings={update:void 0,begin:void 0,run:void 0,complete:void 0,loop:1,direction:"normal",autoplay:!0,offset:0},defaultTweenSettings={duration:1e3,delay:0,easing:"easeOutElastic",elasticity:500,round:0},validTransforms=["translateX","translateY","translateZ","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skewX","skewY"];let transformString;function stringContains(str,text){return str.indexOf(text)>-1}const is={arr:a=>Array.isArray(a),obj:a=>stringContains(Object.prototype.toString.call(a),"Object"),svg:a=>a instanceof SVGElement,dom:a=>a.nodeType||is.svg(a),str:a=>"string"==typeof a,fnc:a=>"function"==typeof a,und:a=>void 0===a,hex:a=>/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a),rgb:a=>/^rgb/.test(a),hsl:a=>/^hsl/.test(a),col:a=>is.hex(a)||is.rgb(a)||is.hsl(a)},bezier=(()=>{const kSplineTableSize=11,kSampleStepSize=.1;function A(aA1,aA2){return 1-3*aA2+3*aA1}function B(aA1,aA2){return 3*aA2-6*aA1}function C(aA1){return 3*aA1}function calcBezier(aT,aA1,aA2){return((A(aA1,aA2)*aT+B(aA1,aA2))*aT+C(aA1))*aT}function getSlope(aT,aA1,aA2){return 3*A(aA1,aA2)*aT*aT+2*B(aA1,aA2)*aT+C(aA1)}function binarySubdivide(aX,aA,aB,mX1,mX2){let currentX,currentT,i=0;do{currentT=aA+(aB-aA)/2,currentX=calcBezier(currentT,mX1,mX2)-aX,currentX>0?aB=currentT:aA=currentT}while(Math.abs(currentX)>1e-7&&++i<10);return currentT}function newtonRaphsonIterate(aX,aGuessT,mX1,mX2){for(let i=0;i<4;++i){const currentSlope=getSlope(aGuessT,mX1,mX2);if(0===currentSlope)return aGuessT;const currentX=calcBezier(aGuessT,mX1,mX2)-aX;aGuessT-=currentX/currentSlope}return aGuessT}function bezier(mX1,mY1,mX2,mY2){if(!(0<=mX1&&mX1<=1&&0<=mX2&&mX2<=1))return;let sampleValues=new Float32Array(11);if(mX1!==mY1||mX2!==mY2)for(let i=0;i<11;++i)sampleValues[i]=calcBezier(.1*i,mX1,mX2);function getTForX(aX){let intervalStart=0,currentSample=1;const lastSample=10;for(;10!==currentSample&&sampleValues[currentSample]<=aX;++currentSample)intervalStart+=.1;--currentSample;const dist=(aX-sampleValues[currentSample])/(sampleValues[currentSample+1]-sampleValues[currentSample]),guessForT=intervalStart+.1*dist,initialSlope=getSlope(guessForT,mX1,mX2);return initialSlope>=.001?newtonRaphsonIterate(aX,guessForT,mX1,mX2):0===initialSlope?guessForT:binarySubdivide(aX,intervalStart,intervalStart+.1,mX1,mX2)}return x=>mX1===mY1&&mX2===mY2?x:0===x?0:1===x?1:calcBezier(getTForX(x),mY1,mY2)}return bezier})(),easings=(()=>{const names=["Quad","Cubic","Quart","Quint","Sine","Expo","Circ","Back","Elastic"];function elastic(t,p){return 0===t||1===t?t:-Math.pow(2,10*(t-1))*Math.sin((t-1-p/(2*Math.PI)*Math.asin(1))*(2*Math.PI)/p)}const equations={In:[[.55,.085,.68,.53],[.55,.055,.675,.19],[.895,.03,.685,.22],[.755,.05,.855,.06],[.47,0,.745,.715],[.95,.05,.795,.035],[.6,.04,.98,.335],[.6,-.28,.735,.045],elastic],Out:[[.25,.46,.45,.94],[.215,.61,.355,1],[.165,.84,.44,1],[.23,1,.32,1],[.39,.575,.565,1],[.19,1,.22,1],[.075,.82,.165,1],[.175,.885,.32,1.275],(t,f)=>1-elastic(1-t,f)],InOut:[[.455,.03,.515,.955],[.645,.045,.355,1],[.77,0,.175,1],[.86,0,.07,1],[.445,.05,.55,.95],[1,0,0,1],[.785,.135,.15,.86],[.68,-.55,.265,1.55],(t,f)=>t<.5?elastic(2*t,f)/2:1-elastic(-2*t+2,f)/2]};let functions={linear:bezier(.25,.25,.75,.75)};for(let type in equations)equations[type].forEach((f,i)=>{functions["ease"+type+names[i]]=is.fnc(f)?f:bezier.apply(this,f)});return functions})();function stringToHyphens(str){return str.replace(/([a-z])([A-Z])/g,"-").toLowerCase()}function selectString(str){if(!is.col(str))try{let nodes;return document.querySelectorAll(str)}catch(e){return}}function arrayLength(arr){return arr.length}function flattenArray(arr){return arr.reduce((a,b)=>a.concat(is.arr(b)?flattenArray(b):b),[])}function toArray(o){return is.arr(o)?o:(is.str(o)&&(o=selectString(o)||o),o instanceof NodeList||o instanceof HTMLCollection?[].slice.call(o):[o])}function arrayContains(arr,val){return arr.some(a=>a===val)}function objectHas(obj,prop){return obj.hasOwnProperty(prop)}function cloneObject(o){let clone={};for(let p in o)clone[p]=o[p];return clone}function replaceObjectProps(o1,o2){let o=cloneObject(o1);for(let p in o1)o[p]=objectHas(o2,p)?o2[p]:o1[p];return o}function mergeObjects(o1,o2){let o=cloneObject(o1);for(let p in o2)o[p]=is.und(o1[p])?o2[p]:o1[p];return o}function hexToRgb(hexValue){const rgx=/^#?([a-f\d])([a-f\d])([a-f\d])$/i,hex=hexValue.replace(rgx,(m,r,g,b)=>r+r+g+g+b+b),rgb=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex),r=parseInt(rgb[1],16),g=parseInt(rgb[2],16),b=parseInt(rgb[3],16);return`rgb(,,)`}function hslToRgb(hslValue){const hsl=/hsl\((\d+),\s*([\d.]+)%,\s*([\d.]+)%\)/g.exec(hslValue),h=parseInt(hsl[1])/360,s=parseInt(hsl[2])/100,l=parseInt(hsl[3])/100;function hue2rgb(p,q,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?p+6*(q-p)*t:t<.5?q:t<2/3?p+(q-p)*(2/3-t)*6:p}let r,g,b;if(0==s)r=g=b=l;else{const q=l<.5?l*(1+s):l+s-l*s,p=2*l-q;r=hue2rgb(p,q,h+1/3),g=hue2rgb(p,q,h),b=hue2rgb(p,q,h-1/3)}return`rgb(${255*r},${255*g},${255*b})`}function colorToRgb(val){return is.rgb(val)?val:is.hex(val)?hexToRgb(val):is.hsl(val)?hslToRgb(val):void 0}function getUnit(val){const split=/([\+\-]?[0-9#\.]+)(%|px|pt|em|rem|in|cm|mm|ex|pc|vw|vh|deg|rad|turn)?/.exec(val);if(split)return split[2]}function getTransformUnit(propName){return stringContains(propName,"translate")?"px":stringContains(propName,"rotate")||stringContains(propName,"skew")?"deg":void 0}function parseFloatValue(val){return parseFloat(val)}function minMaxValue(val,min,max){return Math.min(Math.max(val,min),max)}function getFunctionValue(val,animatable){return is.fnc(val)?val(animatable.target,animatable.id,animatable.total):val}function getCSSValue(el,prop){if(prop in el.style)return getComputedStyle(el).getPropertyValue(stringToHyphens(prop))||"0"}function getAnimationType(el,prop){return is.dom(el)&&arrayContains(validTransforms,prop)?"transform":is.dom(el)&&(el.getAttribute(prop)||is.svg(el)&&el[prop])?"attribute":is.dom(el)&&"transform"!==prop&&getCSSValue(el,prop)?"css":null!=el[prop]?"object":void 0}function getTransformValue(el,propName){const defaultUnit=getTransformUnit(propName),defaultVal=stringContains(propName,"scale")?1:0+defaultUnit,str=el.style.transform;if(!str)return defaultVal;let match=[],props=[],values=[];const rgx=/(\w+)\((.+?)\)/g;for(;match=rgx.exec(str);)props.push(match[1]),values.push(match[2]);const value=values.filter((val,i)=>props[i]===propName);return arrayLength(value)?value[0]:defaultVal}function getOriginalTargetValue(target,propName){switch(getAnimationType(target,propName)){case"transform":return getTransformValue(target,propName);case"css":return getCSSValue(target,propName);case"attribute":return target.getAttribute(propName)}return target[propName]||0}function getRelativeValue(to,from){const operator=/^(\*=|\+=|-=)/.exec(to);if(!operator)return to;const x=parseFloatValue(from),y=parseFloatValue(to.replace(operator[0],""));switch(operator[0][0]){case"+":return x+y;case"-":return x-y;case"*":return x*y}}function validateValue(val,unit){if(is.col(val))return colorToRgb(val);const originalUnit=getUnit(val),unitLess=originalUnit?val.substr(0,arrayLength(val)-arrayLength(originalUnit)):val;return unit?unitLess+unit:unitLess}function isPath(val){return is.obj(val)&&objectHas(val,"totalLength")}function setDashoffset(el){const pathLength=el.getTotalLength();return el.setAttribute("stroke-dasharray",pathLength),pathLength}function getPath(path,percent){const el=is.str(path)?selectString(path)[0]:path,p=percent||100;return function(prop){return{el:el,property:prop,totalLength:el.getTotalLength()*(p/100)}}}function getPathProgress(path,progress){function point(offset=0){const l=progress+offset>=1?progress+offset:0;return path.el.getPointAtLength(l)}const p=point(),p0=point(-1),p1=point(1);switch(path.property){case"x":return p.x;case"y":return p.y;case"angle":return 180*Math.atan2(p1.y-p0.y,p1.x-p0.x)/Math.PI}}function decomposeValue(val,unit){const rgx=/-?\d*\.?\d+/g,value=validateValue(isPath(val)?val.totalLength:val,unit)+"";return{original:value,numbers:value.match(rgx)?value.match(rgx).map(Number):[0],strings:value.split(rgx)}}function recomposeValue(numbers,strings){return strings.reduce((a,b,i)=>a+numbers[i-1]+b)}function parseTargets(targets){const targetsArray=targets?flattenArray(is.arr(targets)?targets.map(toArray):toArray(targets)):[];return targetsArray.filter((item,pos,self)=>self.indexOf(item)===pos)}function getAnimatables(targets){const parsed=parseTargets(targets);return parsed.map((t,i)=>({target:t,id:i,total:arrayLength(parsed)}))}function normalizePropertyTweens(prop,tweenSettings){let settings=cloneObject(tweenSettings);if(is.arr(prop)){const l=arrayLength(prop),isFromTo=2===l&&!is.obj(prop[0]);isFromTo?prop={value:prop}:is.fnc(tweenSettings.duration)||(settings.duration=tweenSettings.duration/l)}return toArray(prop).map((v,i)=>{const delay=i?0:tweenSettings.delay;let obj=is.obj(v)&&!isPath(v)?v:{value:v};return is.und(obj.delay)&&(obj.delay=delay),obj}).map(k=>mergeObjects(k,settings))}function getProperties(instanceSettings,tweenSettings,params){let properties=[];const settings=mergeObjects(instanceSettings,tweenSettings);for(let p in params)objectHas(settings,p)||"targets"===p||properties.push({name:p,offset:settings.offset,tweens:normalizePropertyTweens(params[p],tweenSettings)});return properties}function normalizeTweenValues(tween,animatable){let t={};for(let p in tween){let value=getFunctionValue(tween[p],animatable);is.arr(value)&&(value=value.map(v=>getFunctionValue(v,animatable)),1===arrayLength(value)&&(value=value[0])),t[p]=value}return t.duration=parseFloatValue(t.duration),t.delay=parseFloatValue(t.delay),t}function normalizeEasing(val){return is.arr(val)?bezier.apply(this,val):easings[val]}function normalizeTweens(prop,animatable){let previousTween;return prop.tweens.map(t=>{let tween=normalizeTweenValues(t,animatable);const tweenValue=tween.value,originalValue=getOriginalTargetValue(animatable.target,prop.name),previousValue=previousTween?previousTween.to.original:originalValue,from=is.arr(tweenValue)?tweenValue[0]:previousValue,to=getRelativeValue(is.arr(tweenValue)?tweenValue[1]:tweenValue,from),unit=getUnit(to)||getUnit(from)||getUnit(originalValue);return tween.isPath=isPath(tweenValue),tween.from=decomposeValue(from,unit),tween.to=decomposeValue(to,unit),tween.start=previousTween?previousTween.end:prop.offset,tween.end=tween.start+tween.delay+tween.duration,tween.easing=normalizeEasing(tween.easing),tween.elasticity=(1e3-minMaxValue(tween.elasticity,1,999))/1e3,is.col(tween.from.original)&&(tween.round=1),previousTween=tween,tween})}const setTweenProgress={css:(t,p,v)=>t.style[p]=v,attribute:(t,p,v)=>t.setAttribute(p,v),object:(t,p,v)=>t[p]=v,transform:(t,p,v,transforms,id)=>{transforms[id]||(transforms[id]=[]),transforms[id].push(`()`)}};function createAnimation(animatable,prop){const animType=getAnimationType(animatable.target,prop.name);if(animType){const tweens=normalizeTweens(prop,animatable);return{type:animType,property:prop.name,animatable:animatable,tweens:tweens,duration:tweens[arrayLength(tweens)-1].end,delay:tweens[0].delay}}}function getAnimations(animatables,properties){return flattenArray(animatables.map(animatable=>properties.map(prop=>createAnimation(animatable,prop)))).filter(a=>!is.und(a))}function getInstanceTimings(type,animations,tweenSettings){const math="delay"===type?Math.min:Math.max;return arrayLength(animations)?math.apply(Math,animations.map(anim=>anim[type])):tweenSettings[type]}function createNewInstance(params){const instanceSettings=replaceObjectProps(defaultInstanceSettings,params),tweenSettings=replaceObjectProps(defaultTweenSettings,params),animatables=getAnimatables(params.targets),properties=getProperties(instanceSettings,tweenSettings,params),animations=getAnimations(animatables,properties);return mergeObjects(instanceSettings,{children:[],animatables:animatables,animations:animations,duration:getInstanceTimings("duration",animations,tweenSettings),delay:getInstanceTimings("delay",animations,tweenSettings)})}let activeInstances=[],raf=0;const engine=(()=>{function play(){raf=requestAnimationFrame(step)}function step(t){const activeLength=arrayLength(activeInstances);if(activeLength){let i=0;for(;i<activeLength;)activeInstances[i]&&activeInstances[i].tick(t),i++;play()}else cancelAnimationFrame(raf),raf=0}return play})();function anime(params={}){let now,startTime,lastTime=0,resolve=null;function makePromise(){return window.Promise&&new Promise(_resolve=>resolve=_resolve)}let promise=makePromise(),instance=createNewInstance(params);function toggleInstanceDirection(){instance.reversed=!instance.reversed}function adjustTime(time){return instance.reversed?instance.duration-time:time}function syncInstanceChildren(time){const children=instance.children;if(time>=instance.currentTime)for(let i=0;i<arrayLength(children);i++)children[i].seek(time);else for(let i=arrayLength(children);i--;)children[i].seek(time)}function setAnimationsProgress(insTime){let i=0,transforms={};const animations=instance.animations;for(;i<arrayLength(animations);){const anim=animations[i],animatable=anim.animatable,tweens=anim.tweens,tween=tweens.filter(t=>insTime<t.end)[0]||tweens[arrayLength(tweens)-1],isPath=tween.isPath,round=tween.round,elapsed=minMaxValue(insTime-tween.start-tween.delay,0,tween.duration)/tween.duration,eased=tween.easing(elapsed,tween.elasticity),progress=recomposeValue(tween.to.numbers.map((number,p)=>{const start=isPath?0:tween.from.numbers[p];let value=start+eased*(number-start);return isPath&&(value=getPathProgress(tween.value,value)),round&&(value=Math.round(value*round)/round),value}),tween.to.strings);setTweenProgress[anim.type](animatable.target,anim.property,progress,transforms,animatable.id),anim.currentValue=progress,i++}if(transforms){let id;for(id in transforms){if(!transformString){const t="transform";transformString=getCSSValue(document.body,t)?t:`-webkit-`}instance.animatables[id].target.style[transformString]=transforms[id].join(" ")}}instance.currentTime=insTime,instance.progress=insTime/instance.duration*100}function setCallback(cb){instance[cb]&&instance[cb](instance)}function countIteration(){instance.remaining&&!0!==instance.remaining&&instance.remaining--}function setInstanceProgress(engineTime){const insDuration=instance.duration,insOffset=instance.offset,insDelay=instance.delay,insCurrentTime=instance.currentTime,insReversed=instance.reversed,insTime=minMaxValue(adjustTime(engineTime),0,insDuration);instance.children&&syncInstanceChildren(insTime),insTime>insOffset&&insTime<insDuration?(setAnimationsProgress(insTime),!instance.began&&insTime>=insDelay&&(instance.began=!0,setCallback("begin")),setCallback("run")):(insTime<=insOffset&&0!==insCurrentTime&&(setAnimationsProgress(0),insReversed&&countIteration()),insTime>=insDuration&&insCurrentTime!==insDuration&&(setAnimationsProgress(insDuration),insReversed||countIteration())),engineTime>=insDuration&&(instance.remaining?(startTime=now,"alternate"===instance.direction&&toggleInstanceDirection()):(instance.pause(),"Promise"in window&&(resolve(),promise=makePromise()),instance.completed||(instance.completed=!0,setCallback("complete"))),lastTime=0),setCallback("update")}return instance.reset=function(){const direction=instance.direction,loops=instance.loop;instance.currentTime=0,instance.progress=0,instance.paused=!0,instance.began=!1,instance.completed=!1,instance.reversed="reverse"===direction,instance.remaining="alternate"===direction&&1===loops?2:loops;for(let i=arrayLength(instance.children);i--;){const child=instance.children[i];child.seek(child.offset),child.reset()}},instance.tick=function(t){now=t,startTime||(startTime=now);const engineTime=(lastTime+now-startTime)*anime.speed;setInstanceProgress(engineTime)},instance.seek=function(time){setInstanceProgress(adjustTime(time))},instance.pause=function(){const i=activeInstances.indexOf(instance);i>-1&&activeInstances.splice(i,1),instance.paused=!0},instance.play=function(){instance.paused&&(instance.paused=!1,startTime=0,lastTime=adjustTime(instance.currentTime),activeInstances.push(instance),raf||engine())},instance.reverse=function(){toggleInstanceDirection(),startTime=0,lastTime=adjustTime(instance.currentTime)},instance.restart=function(){instance.pause(),instance.reset(),instance.play()},instance.finished=promise,instance.reset(),instance.autoplay&&instance.play(),instance}function removeTargets(targets){const targetsArray=parseTargets(targets);for(let i=arrayLength(activeInstances);i--;){const instance=activeInstances[i],animations=instance.animations;for(let a=arrayLength(animations);a--;)arrayContains(targetsArray,animations[a].animatable.target)&&(animations.splice(a,1),arrayLength(animations)||instance.pause())}}function timeline(params){let tl=anime(params);return tl.pause(),tl.duration=0,tl.add=function(instancesParams){return tl.children.forEach(i=>{i.began=!0,i.completed=!0}),toArray(instancesParams).forEach(insParams=>{const tlDuration=tl.duration,insOffset=insParams.offset;insParams.autoplay=!1,insParams.offset=is.und(insOffset)?tlDuration:getRelativeValue(insOffset,tlDuration),tl.seek(insParams.offset);const ins=anime(insParams);ins.duration>tlDuration&&(tl.duration=ins.duration),ins.began=!0,tl.children.push(ins)}),tl.reset(),tl.seek(0),tl.autoplay&&tl.restart(),tl},tl}return anime.version="2.0.2",anime.speed=1,anime.running=activeInstances,anime.remove=removeTargets,anime.getValue=getOriginalTargetValue,anime.path=getPath,anime.setDashoffset=setDashoffset,anime.bezier=bezier,anime.easings=easings,anime.timeline=timeline,anime.random=(min,max)=>Math.floor(Math.random()*(max-min+1))+min,anime});